// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddSharesToFile(ctx context.Context, arg []AddSharesToFileParams) (int64, error)
	CreateAuditLog(ctx context.Context, arg CreateAuditLogParams) (AuditLog, error)
	CreateBlob(ctx context.Context, arg CreateBlobParams) (Blob, error)
	CreateFile(ctx context.Context, arg CreateFileParams) (File, error)
	CreateFolder(ctx context.Context, arg CreateFolderParams) (Folder, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAllSharesForFile(ctx context.Context, fileID uuid.UUID) error
	DeleteBlob(ctx context.Context, id uuid.UUID) error
	DeleteBlobIfUnused(ctx context.Context, id uuid.UUID) (string, error)
	DeleteBlobsByStoragePaths(ctx context.Context, storagePaths []string) error
	DeleteFile(ctx context.Context, id uuid.UUID) error
	DeleteFolder(ctx context.Context, id uuid.UUID) error
	GetAuditLogActivityByDay(ctx context.Context, arg GetAuditLogActivityByDayParams) ([]GetAuditLogActivityByDayRow, error)
	GetBlobByID(ctx context.Context, id uuid.UUID) (Blob, error)
	GetBlobBySha(ctx context.Context, sha256 string) (Blob, error)
	GetBlobIDsInFolderHierarchy(ctx context.Context, id uuid.UUID) ([]uuid.UUID, error)
	GetDeduplicatedUsage(ctx context.Context, ownerID int64) (int64, error)
	GetFileByUUID(ctx context.Context, id uuid.UUID) (File, error)
	GetFilesForUser(ctx context.Context, arg GetFilesForUserParams) ([]GetFilesForUserRow, error)
	GetFilesForUserCount(ctx context.Context, arg GetFilesForUserCountParams) (int64, error)
	GetFolderByID(ctx context.Context, id uuid.UUID) (Folder, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	IncrementFileDownloadCount(ctx context.Context, id uuid.UUID) error
	ListAllFiles(ctx context.Context, arg ListAllFilesParams) ([]ListAllFilesRow, error)
	ListAuditLogs(ctx context.Context, arg ListAuditLogsParams) ([]AuditLog, error)
	ListFilesByOwner(ctx context.Context, arg ListFilesByOwnerParams) ([]ListFilesByOwnerRow, error)
	//---------------------------
	ListFolderContents(ctx context.Context, arg ListFolderContentsParams) ([]ListFolderContentsRow, error)
	ListOtherUsers(ctx context.Context, id int64) ([]ListOtherUsersRow, error)
	ListRootContents(ctx context.Context, arg ListRootContentsParams) ([]ListRootContentsRow, error)
	ListSelectableFolders(ctx context.Context, arg ListSelectableFoldersParams) ([]ListSelectableFoldersRow, error)
	ListUsersWithAccessToFile(ctx context.Context, fileID uuid.UUID) ([]ListUsersWithAccessToFileRow, error)
	UpdateFileFolder(ctx context.Context, arg UpdateFileFolderParams) error
	UpdateFilename(ctx context.Context, arg UpdateFilenameParams) (File, error)
	UpdateFolder(ctx context.Context, arg UpdateFolderParams) (UpdateFolderRow, error)
	UpdateFolderParentFolder(ctx context.Context, arg UpdateFolderParentFolderParams) error
	UserHasAccess(ctx context.Context, arg UserHasAccessParams) (bool, error)
	UserOwnsBlob(ctx context.Context, arg UserOwnsBlobParams) (int32, error)
}

var _ Querier = (*Queries)(nil)
